name: CI

on:
  push:
  pull_request:

jobs:
  # LibVLC_iOS_NuGet:
  #   if: github.event_name == 'push' || github.event.pull_request.head.repo.id != github.event.pull_request.base.repo.id
  #   runs-on: macos-10.15
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2 
  #     - name: LibVLC iOS build
  #       shell: bash
  #       run: |
  #         git clone https://github.com/videolan/vlckit
  #         cd vlckit && git checkout 3.0
  #         ./buildMobileVLCKit.sh -f
          
  #         patchBinary () {
  #           install_name_tool -id @rpath/DynamicMobileVLCKit.framework/DynamicMobileVLCKit MobileVLCKit
  #           defaults write $(pwd)/Info.plist CFBundleExecutable -string DynamicMobileVLCKit
  #           defaults write $(pwd)/Info.plist CFBundleName -string DynamicMobileVLCKit
  #           defaults write $(pwd)/Info.plist CFBundleIdentifier -string org.videolan.DynamicMobileVLCKit
  #           mv MobileVLCKit DynamicMobileVLCKit
  #           cd ..
  #           mv MobileVLCKit.framework DynamicMobileVLCKit.framework
  #           cd ..
  #         }

  #         cd build/MobileVLCKit.xcframework/ios-arm64_armv7_armv7s/MobileVLCKit.framework
  #         patchBinary
  #         cd ios-arm64_i386_x86_64-simulator/MobileVLCKit.framework
  #         patchBinary
  #         mkdir -p $GITHUB_WORKSPACE/build/ios-device
  #         mkdir -p $GITHUB_WORKSPACE/build/ios-simulator
  #         mv ios-arm64_armv7_armv7s/DynamicMobileVLCKit.framework $GITHUB_WORKSPACE/build/ios-device
  #         mv ios-arm64_i386_x86_64-simulator/DynamicMobileVLCKit.framework $GITHUB_WORKSPACE/build/ios-simulator
  #     - name: Setup NuGet
  #       uses: nuget/setup-nuget@v1
  #       with:
  #         nuget-version: '5.x'
  #     - name: Create LibVLC iOS NuGet package
  #       run: |
  #         nuget pack VideoLAN.LibVLC.iOS.nuspec
  #     - name: Upload build
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: libvlc-ios-build
  #         path: ./*.nupkg

  PrepareEnvUWPAccessV3:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.id != github.event.pull_request.base.repo.id
    runs-on: ubuntu-latest
    steps:
      - name: Checkout libvlc uwp access module code
        shell: bash
        run: |
          git clone https://code.videolan.org/videolan/vlc-winrt
          # TODO: parameterize arch
          mkdir -p vlc-winrt/libvlc/Universal/vlc-amd64
      - name: Download LibVLC
        shell: bash
        run: | 
          # TODO: change uwp-v3 by master
          # TODO: parameterize arch, version
          wget -O build.zip https://code.videolan.org/mfkl/libvlc-nuget/-/jobs/artifacts/uwp-v3/download?job=uwp64-libvlc-llvm
          7z e build.zip && 7z x vlc-3.0.16-win64.7z -obuild
          mv build/vlc-3.0.16/ build/Release
          mv build/Release vlc-winrt/libvlc/Universal/vlc-amd64
  UWP_access_v3:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.id != github.event.pull_request.base.repo.id
    runs-on: windows-latest
    needs: [PrepareEnvUWPAccessV3]
    steps: 
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.3
      - name: MSBuild
        working-directory: vlc-winrt/modules/libaccess_winrt_plugin.UWP
        run: msbuild libaccess_winrt_plugin.UWP.vcxproj
      # - name: Upload build
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: libvlc-uwp-access-build
      #     path: ./*.nupkg